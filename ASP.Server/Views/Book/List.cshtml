@using ASP.Server.Model
@model IEnumerable<Book>
@{
    ViewData["Title"] = "Home Page";
    List<Genre> AllGenres = ViewData["AllGenres"] as List<Genre>;
    List<Author> AllBooks = ViewData["AllAuthors"] as List<Author>;
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .filter-section {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        margin-bottom: 20px;
        background-color: #f2f2f2;
        border-radius: 5px;
        padding: 10px;
    }

        .filter-section > div {
            display: flex;
            align-items: center;
            margin-right: 20px;
        }

        .filter-section label {
            margin-right: 5px;
            font-size: 14px;
            font-weight: bold;
        }

        .filter-section input[type="text"],
        .filter-section input[type="checkbox"] {
            margin-right: 5px;
            padding: 5px;
            font-size: 14px;
            border: none;
            border-radius: 3px;
        }

        .filter-section input[type="text"] {
            width: 200px;
        }

        .filter-section input[type="checkbox"] {
            transform: scale(1.5);
        }

    body {
        font-family: Arial, sans-serif;
    }

    .listeBooks {
        width: 100%;
        margin: 0 auto;
    }

    .book {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-direction: row;
        margin-bottom: 10px;
        padding: 10px;
        background-color: #f1f1f1;
        border: 1px solid #ddd;
    }

        .book h2 {
            margin: 0;
            font-size: 24px;
        }

        .book p {
            margin: 0;
            font-size: 18px;
        }

    .delete-button, .cancel-button {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }

    .edit-button, .save-button {
        background-color: sandybrown;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }


    .edit-section {
        display: none;
        margin-top: 10px;
        padding: 10px;
        background-color: #f1f1f1;
        border: 1px solid #ddd;
    }

    .genre-checkbox {
        margin-right: 10px;
    }
</style>
<div class="filter-section">
    <div>
        <label for="filter-author">Filter by authors:</label>
        <input type="text" id="filter-author" />
    </div>
    <div>
        <label>Filter by genres:</label>
        @foreach (var genre in AllGenres)
        {
            <label class="genre-filter-label"><input type="checkbox" class="genre-filter-checkbox" name="genres" value="@genre.Name" /> @genre.Name</label>
        }
    </div>
</div>
<div class="listeBooks">
    @foreach (var book in Model)
    {
        <div class="book">
            <button class="edit-button">Edit</button>
            <h2>@book.Title</h2>
            <p>Author: @book.Author.Name</p>
            <p>Price: @book.Price.ToString("0.00") €</p>
            <p>Genres: @string.Join(", ", book.Genres.Select(g => g.Name))</p>
            <form method="post" action="@Url.Action("Delete", "Book", new { id = book.Id })">
                <button type="submit" class="delete-button">Delete</button>
            </form>
            <div class="edit-section">
                <form method="get" action="@Url.Action("Edit", "Book", new { id = book.Id })">
                    <input type="hidden" name="id" value="@book.Id" />
                    <div>
                        <label for="title-input">Title:</label>
                        <input type="text" id="title-input" name="title" value="@book.Title" />
                    </div>
                    <div>
                        <label for="author-input">Author:</label>
                        <input type="text" id="author-input" name="author" value="@book.Author.Name" />
                    </div>
                    <div>
                        <label for="price-input">Price:</label>
                        <input step="any" type="number" id="price-input" name="price" value="@book.Price" />
                    </div>
                    <div>
                        <label>Genres:</label>
                        @foreach (var genre in AllGenres)
                        {
                            bool isChecked = book.Genres.Contains(genre);
                            <label class="genre-checkbox-label">
                                <input type="checkbox" class="genre-checkbox" name="genres" value="@genre.Id" @(isChecked ? "checked" : "") /> @genre.Name
                            </label>
                        }
                    </div>
                    <button type="submit" class="save-button">Save</button>
                    <button type="button" class="cancel-button">Cancel</button>
                </form>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $('.edit-button').click(function () {
            var book = $(this).closest('.book');
            var editSection = book.find('.edit-section');
            var title = book.find('h2').text();
            var author = book.find('p:eq(0)').text().split(':')[1].trim();
            var price = parseFloat(book.find('p:eq(1)').text().split(':')[1].trim().replace('€', ''));
            var genreIds = book.find('p:eq(2)').text().split(':')[1].trim().split(',').map(function (s) { return s.trim(); });
            editSection.find('#title-input').val(title);
            editSection.find('#author-input').val(author);
            editSection.find('#price-input').val(price);
            editSection.find('.genre-checkbox').prop('checked', false);
            editSection.find('.genre-checkbox').each(function () {
                var checkbox = $(this);
                var genreName = checkbox.parent().text().trim();
                if (genreIds.includes(genreName)) {
                    checkbox.prop('checked', true);
                }
            });
            book.find('.edit-section').show();
        });
        $('.cancel-button').click(function () {
            var book = $(this).closest('.book');
            book.find('.edit-section').hide();
        });
    });
    const filterAuthorInput = document.getElementById("filter-author");
    const genreFilterCheckboxes = document.querySelectorAll(".genre-filter-checkbox");
    const books = document.querySelectorAll(".book");
    function filterBooks() {
        const authorFilterValue = filterAuthorInput.value.trim().toLowerCase();
        const genreFilterValues = Array.from(genreFilterCheckboxes)
            .filter(cb => cb.checked)
            .map(cb => cb.value);

        for (var i = 0; i < genreFilterValues.length; i++)
        {
            genreFilterValues[i] = genreFilterValues[i].trim().toLowerCase();
        }

        for (const book of books) {
            var authorValue = book.querySelector("p:nth-of-type(1)").textContent.trim().toLowerCase();
            authorValue = authorValue.replace("author: ", "")
            const genreValues = book.querySelector("p:nth-of-type(3)").textContent.trim().toLowerCase();
            
            const authorMatch = authorFilterValue === "" || authorValue.includes(authorFilterValue);
            const genreMatch = genreFilterValues.length === 0 || genreFilterValues.every(genreValue => genreValues.includes(genreValue));

            book.style.display = authorMatch && genreMatch ? "" : "none";
        }
    }

    filterAuthorInput.addEventListener("input", filterBooks);
    for (const checkbox of genreFilterCheckboxes) {
        checkbox.addEventListener("change", filterBooks);
    }
</script>
